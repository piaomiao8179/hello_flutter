import 'package:flutter/material.dart';

const double _kWidth = 304.0;

class MonitorStatusDrawer extends StatefulWidget {

  final double elevation;
  final Widget child;
  final String semanticLabel;
  final DrawerCallback callback;

  const MonitorStatusDrawer({
    Key key,
    this.elevation = 16.0,
    this.child,
    this.semanticLabel,
    this.callback,
  }) : assert(elevation != null && elevation >= 0.0),
        super(key: key);

  @override
  State<StatefulWidget> createState() {
    return _MonitorStatusDrawerState();
  }
}

class _MonitorStatusDrawerState extends State<MonitorStatusDrawer> {

  @override
  void initState() {
    super.initState();
    // 打开drawer
    if (widget.callback != null) widget.callback(true);
  }

  @override
  void dispose() {
    super.dispose();
    // 关闭drawer
    if (widget.callback != null) widget.callback(false);
  }

  @override
  Widget build(BuildContext context) {
    assert(debugCheckHasMaterialLocalizations(context));
    String label = widget.semanticLabel;
    switch (Theme.of(context).platform) {
      case TargetPlatform.iOS:
        label = widget.semanticLabel;
        break;
      case TargetPlatform.android:
      case TargetPlatform.fuchsia:
        label = widget.semanticLabel ?? MaterialLocalizations.of(context)?.drawerLabel;
    }
    return Semantics(
      scopesRoute: true,
      namesRoute: true,
      explicitChildNodes: true,
      label: label,
      child: ConstrainedBox(
        // 此处是控制drawer滑出后占全屏的宽度, 可以通过修改该值进行控制drawer的宽度大小
        constraints: const BoxConstraints.expand(width: _kWidth),
        child: Material(
          elevation: widget.elevation,
          child: widget.child,
        ),
      ),
    );
  }
}
